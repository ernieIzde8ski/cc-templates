# dev tools
[tool.black]
line-length = 90
target-version = ["py310", "py311", "py312"]
skip-magic-trailing-comma = true

[tool.isort]
profile = "black"
line_length = 90

[tool.basedpyright]
reportImplicitStringConcatenation = false
pythonVersion = "{{ cookiecutter.python_requirement }}"

# packaging
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.__project_slug }}"
authors = [
    { name="{{ cookiecutter.author_name }}", email="{{ cookiecutter.author_email }}" }
]
description = "{{ cookiecutter.project_description }}"
readme = { file = "README.md", content-type="text/markdown" }
requires-python = "{{ cookiecutter.python_requirement }}"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dynamic = ["dependencies", "version"]
#: if cookiecutter.license != "unlicensed"
license = { file = "LICENSE" }
#: endif
#: if cookiecutter.include_bin
scripts = { "{{ cookiecutter.__project_slug }}" = "{{ cookiecutter.__package_name }}.argument_parser:run" }
#: endif

#: if cookiecutter.github_username != ""
[project.urls]
Homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.__project_slug }}"
Issues =  "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.__project_slug }}/issues"
#: endif

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }
version = { attr = "{{ cookiecutter.__package_name }}.__version__" }

[tool.setuptools.packages.find]
where = ["src"]
